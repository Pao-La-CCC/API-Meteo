{"ast":null,"code":"import React from 'react';\nexport default class InputMeteo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: '',\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n    this.handelChange = this.handelChange.bind(this);\n    this.handelSubmit = this.handelSubmit.bind(this);\n  }\n\n  handelChange(e) {\n    this.setState({\n      data: e.target.value\n    });\n  }\n\n  handelSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.data || this.state.data === '') {\n      return;\n    }\n\n    console.log(this.state);\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.example.com/items\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.items\n      });\n    }, // Remarque : il est important de traiter les erreurs ici\n    // au lieu d'utiliser un bloc catch(), pour ne pas passer à la trappe\n    // des exceptions provenant de réels bugs du composant.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  } // render () {\n  //     return (\n  //         <React.Fragment>\n  //             <h1> Composant InputMeteo</h1>\n  //             <p> {this.state.data}  </p>\n  //             <form   onSubmit={this.handelSubmit}>\n  //                 <input type=\"text\" placeholder='Saisir une location'  value={this.state.data}  onChange={this.handelChange} ></input>\n  //                 <input type=\"submit\" value='Rechercher' onClick={this.handelSubmit} ></input>\n  //             </form>\n  //         </React.Fragment>\n  //     )\n  // }\n\n\n}","map":{"version":3,"sources":["/Users/paolacyp/Desktop/REACT_JS/mon-app/src/App/Component/InputMeteo/InputMeteo.js"],"names":["React","InputMeteo","Component","constructor","props","state","data","error","isLoaded","items","handelChange","bind","handelSubmit","e","setState","target","value","preventDefault","console","log","componentDidMount","fetch","then","res","json","result"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AAEpDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAG,EADE;AAETC,MAAAA,KAAK,EAAE,IAFE;AAGTC,MAAAA,QAAQ,EAAE,KAHD;AAITC,MAAAA,KAAK,EAAE;AAJE,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AAEH;;AAEDD,EAAAA,YAAY,CAAEG,CAAF,EAAK;AACb,SAAKC,QAAL,CAAc;AAAER,MAAAA,IAAI,EAAGO,CAAC,CAACE,MAAF,CAASC;AAAlB,KAAd;AACH;;AAEDJ,EAAAA,YAAY,CAAEC,CAAF,EAAI;AACZA,IAAAA,CAAC,CAACI,cAAF;;AAEA,QAAI,CAAC,KAAKZ,KAAL,CAAWC,IAAZ,IAAsB,KAAKD,KAAL,CAAWC,IAAX,KAAoB,EAA9C,EAAiD;AAC7C;AACH;;AACDY,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAjB;AACH;;AAGDe,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,WAAKX,QAAL,CAAc;AACZN,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEgB,MAAM,CAAChB;AAFF,OAAd;AAID,KARL,EASI;AACA;AACA;AACCF,IAAAA,KAAD,IAAW;AACT,WAAKO,QAAL,CAAc;AACZN,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAjBL;AAmBD,GAjDiD,CAsDpD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;AApEoD","sourcesContent":["import React from 'react';\n\nexport default class InputMeteo extends React.Component {\n    \n    constructor(props){\n        super(props)\n        this.state = {\n            data : '',\n            error: null,\n            isLoaded: false,\n            items: []\n        }\n        this.handelChange = this.handelChange.bind(this) ; \n        this.handelSubmit = this.handelSubmit.bind(this) ;\n\n    }\n\n    handelChange (e) {\n        this.setState({ data : e.target.value})\n    }\n\n    handelSubmit (e){\n        e.preventDefault() ;\n\n        if (!this.state.data  ||  this.state.data === ''){\n            return ;\n        }\n        console.log(this.state);\n    }\n\n\n    componentDidMount() {\n        fetch(\"https://api.example.com/items\")\n          .then(res => res.json())\n          .then(\n            (result) => {\n              this.setState({\n                isLoaded: true,\n                items: result.items\n              });\n            },\n            // Remarque : il est important de traiter les erreurs ici\n            // au lieu d'utiliser un bloc catch(), pour ne pas passer à la trappe\n            // des exceptions provenant de réels bugs du composant.\n            (error) => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n          )\n      }\n    \n\n\n\n    // render () {\n    //     return (\n    //         <React.Fragment>\n        \n    //             <h1> Composant InputMeteo</h1>\n    //             <p> {this.state.data}  </p>\n    //             <form   onSubmit={this.handelSubmit}>\n    //                 <input type=\"text\" placeholder='Saisir une location'  value={this.state.data}  onChange={this.handelChange} ></input>\n    //                 <input type=\"submit\" value='Rechercher' onClick={this.handelSubmit} ></input>\n    //             </form>\n    //         </React.Fragment>\n        \n    //     )\n\n    // }\n \n}\n"]},"metadata":{},"sourceType":"module"}